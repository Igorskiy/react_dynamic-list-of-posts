{"version":3,"sources":["User.js","Comment.js","Comments.js","Post.js","postsApi.js","PostsList.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","Fragment","className","concat","name","email","address","city","street","suite","zipcode","defaultProps","Comment","commentProps","key","id","body","Comments","comments","map","comment","src_Comment","Post","postElems","title","src_User","src_Comments","postComments","getPosts","postData","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsers","userData","_context2","getComments","commentData","_context3","PostsList","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isShown","setIsShown","_useState5","_useState6","preparedPosts","setPreparedPosts","_useState7","_useState8","searchTerm","setSearchTerm","filteredPost","filter","post","toLowerCase","includes","trim","type","onClick","_ref2","listOfPosts","listOfUsers","listOfComments","mergedPosts","Promise","all","find","person","userId","postId","objectSpread2","showPreparedPosts","placeholder","value","onChange","event","target","length","src_Post","ReactDOM","render","src_PostsList","document","getElementById"],"mappings":"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","file":"static/js/main.65360e51.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n\n  <>\n    <p>\n      <span className=\"author__name\">{`Name: ${user.name}`}</span>\n      <span className=\"author__mail\">{`E-mail: ${user.email}`}</span>\n    </p>\n    <p>\n      <span className=\"author__address\">\n        {\n          `Address:\n         ${user.address.city}\n        ${user.address.street}\n        ${user.address.suite}`\n        }\n      </span>\n      <span className=\"author__zipcode\">\n        {`Zipcode:  ${user.address.zipcode}`}\n      </span>\n    </p>\n\n  </>\n);\n\nUser.propTypes = {\n  user: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ])),\n};\nUser.defaultProps = { user: [] };\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ commentProps }) => (\n  <React.Fragment key={commentProps.id}>\n    <section className=\"post__comments--body text\">\n      {commentProps.body}\n    </section>\n    <section className=\"post__comments--author author\">\n      {` Name: ${commentProps.name}`}\n      <br />\n      {`E-mail: ${commentProps.email}`}\n    </section>\n    <br />\n  </React.Fragment>\n);\n\nComment.propTypes = {\n  commentProps: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array,\n  ])),\n};\nComment.defaultProps = { commentProps: [] };\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst Comments = ({ comments }) => (\n  <section className=\"post__comments\">\n    <h2 className=\"post__comments--title title\">Comments:</h2>\n    {' '}\n    {comments.map(comment => (\n      <Comment commentProps={comment} key={comment.id} />\n    ))}\n  </section>\n);\n\nComments.propTypes = { comments: PropTypes.arrayOf(PropTypes.object) };\nComments.defaultProps = { comments: [] };\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport Comments from './Comments';\n\nconst Post = ({ postElems }) => (\n  <>\n    <h1 className=\"post__title title\">\n      {postElems.title}\n    </h1>\n    <section className=\"post__user author\">\n      <User user={postElems.user} />\n    </section>\n    <article className=\"post__body text\">\n      {postElems.body}\n    </article>\n    <Comments comments={postElems.postComments} />\n  </>\n);\n\nPost.propTypes = {\n  postElems: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array,\n  ])),\n};\nPost.defaultProps = { postElems: [] };\nexport default Post;\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nconst commentsURL = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getPosts = async() => {\n  const postData = await fetch(postsURL);\n\n  return postData.json();\n};\n\nexport const getUsers = async() => {\n  const userData = await fetch(usersURL);\n\n  return userData.json();\n};\n\nexport const getComments = async() => {\n  const commentData = await fetch(commentsURL);\n\n  return commentData.json();\n};\n","import React, { useState } from 'react';\nimport Post from './Post';\nimport './App.css';\nimport { getPosts, getUsers, getComments } from './postsApi';\n\nfunction PostsList() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShown, setIsShown] = useState(true);\n  const [preparedPosts, setPreparedPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const showPreparedPosts = async() => {\n    setIsLoading(true);\n\n    const [listOfPosts, listOfUsers, listOfComments] = await Promise\n      .all([getPosts(), getUsers(), getComments()]);\n    const mergedPosts = listOfPosts.map((post) => {\n      const user = listOfUsers\n        .find(person => person.id === post.userId);\n      const postComments = listOfComments\n        .filter(comment => comment.postId === post.id);\n\n      return {\n        ...post,\n        user,\n        postComments,\n      };\n    });\n\n    setPreparedPosts(mergedPosts);\n    setIsLoading(false);\n    setIsShown(false);\n  };\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredPost = !searchTerm\n    ? preparedPosts\n    : preparedPosts\n      .filter(post => post.title.toLowerCase()\n        .includes(searchTerm.trim().toLowerCase())\n            || post.body.toLowerCase()\n              .includes(searchTerm.trim().toLowerCase()));\n\n  return (\n    <div className=\"App\">\n      {\n        isShown ? (\n          <button\n            type=\"button\"\n            className=\"init-button\"\n            onClick={() => {\n              showPreparedPosts();\n            }}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              className=\"post-list__searchInput\"\n              placeholder=\"Search\"\n              value={searchTerm}\n              onChange={handleChange}\n            />\n            {\n              (filteredPost.length === 1)\n                ? (\n                  <span className=\"post-list__post-count\">\n                    {`${filteredPost.length} post found`}\n                  </span>\n                )\n                : (\n                  <span className=\"post-list__post-count\">\n                    {`${filteredPost.length} posts found`}\n                  </span>\n                )\n            }\n            <article className=\"post-list\">\n\n              {filteredPost.map(post => (\n                <section\n                  className=\"post-list__post\"\n                  key={post.id}\n                >\n                  <Post postElems={post} />\n                </section>\n              ))}\n            </article>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\nexport default PostsList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport PostsList from './PostsList';\n\nReactDOM.render(<PostsList />, document.getElementById('root'));\n"],"sourceRoot":""}